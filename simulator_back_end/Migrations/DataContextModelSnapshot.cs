// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using simulator_back_end.Data;

namespace simulator_back_end.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("simulator_back_end.Models.Simulacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataDaCompra");

                    b.Property<decimal>("Juros");

                    b.Property<int>("QuantidadeDeParcelas");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<decimal>("ValorDaCompra");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Simulacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataDaCompra = new DateTime(2019, 6, 12, 12, 54, 19, 276, DateTimeKind.Local).AddTicks(1511),
                            Juros = 4.12m,
                            QuantidadeDeParcelas = 4,
                            Titulo = "Fiat Uno Vivace",
                            UsuarioId = 1,
                            ValorDaCompra = 25694.23m
                        });
                });

            modelBuilder.Entity("simulator_back_end.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "abc@abc.com",
                            Senha = "123"
                        });
                });

            modelBuilder.Entity("simulator_back_end.Models.Simulacao", b =>
                {
                    b.HasOne("simulator_back_end.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
